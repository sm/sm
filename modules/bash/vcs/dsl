#!/usr/bin/env bash

#
# # VCS (SCM) Module
#
:
# ## scm\_fetch()
#
#
#
# Code Walkthrough
scm_fetch()
{
  local _url="${1:-${extension_url:-}}" _identifier repo_path

  if variable_is_nonempty _url
  then
    _identifier="${_url//\//_}" # Convert '/' to an invalid url component '_'
    repo_path="${repos_path}/${_identifier}"

    ensure_paths_exist "${repos_path}"

    case "${_url}" in
      *git*)
        if path_exists "${repo_path}/.git"
        then
          true # already fetched!
        else
          if path_exists "${repo_path}"
          then
            remove_paths "${repo_path}"
          fi

          if ! git clone --depth 1 ${_url} "${repo_path}" >/dev/null 2>&1
          then
            error "There was an error while cloning the repository from the url '${_url}'"
          fi
        fi
        ;;
      *svn*)
        NIY
        ;;
      *hg*)
        NIY
        ;;
      *fossil*)
        NIY
        ;;
      *)
        ;;
    esac
  else
    fail "Cannot fetch an extension from a url as no url was given"
  fi
}

# ## scm\_update()
#
#
#
# Code Walkthrough
scm_update()
{
  local _url initial_pwd _identifier repo_path

  _url="${1:-${extension_url:-}}"
  initial_pwd="$PWD"

  if variable_is_nonempty _url
  then
    _identifier="${_url//\//_}" # Convert '/' to an invalid url component '_'
    repo_path="${repos_path}/${_identifier}"

    enter "${repo_path}"

    case "${_url}" in
      *git*)
        # TODO: Use git cli instead of awking it :)
        if [[ -z "$(git branch | awk "/${branch:=master}$/" 2>/dev/null)" ]]
        then
          if ! (
            builtin cd  "${repo_path}"
            git checkout -b "$branch" --track "$remote/$branch" >/dev/null 2>&1
            )
          then
            error "$remote $branch remote branch not found. Halting."
          fi
        elif [[ -z "$(git branch | awk "/\* $branch$/{print \$2}" 2>/dev/null)" ]]
        then
          if ! (
            builtin cd "${repo_path}"
            git checkout $branch >/dev/null 2>&1
            )
          then
            error "Unable to checkout $branch.\nCould not get head. Halting."
          fi
        fi

        if ! (
          builtin cd "${repo_path}"
          git pull --rebase origin $branch >/dev/null 2>&1
          )
        then
          error "Git pull failed. Halting."
        fi
        ;;
      *svn*)
        NIY "Subversion scm_update"
        ;;
      *hg*)
        NIY "hg scm_update"
        ;;
      *fossil*)
        NIY "fossil scm_update"
        ;;
      *)
        error "Unknownn SCM for url '${_url}'"
        ;;
    esac

    enter "$initial_pwd"
  else
    fail "Cannot fetch an extension from a url as no url was given"
  fi
}

scm_get()
{
  local _url="$1" repo_path

  _identifier="${_url//\//_}" # Convert '/' to an invalid url component '_'
  repo_path="${repos_path}/${_identifier}"

  if path_exists "$repo_path/.git"
  then
    log "# Updating repository from ${_url}"
    scm_update "${_url}"
  else
    log "# Cloning repository from ${_url}"
    scm_fetch "${_url}"
  fi

}
