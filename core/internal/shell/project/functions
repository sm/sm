#!/bin/sh

#
# Initializes paths and environment for the logical concept of a 'project'.
#
internal_project_initialize()
{
  typeset -f project_log_path extension_log_path

  # TODO: Read project and project_path from defaults file first.
  if user is root
  then
    # TODO: When run as root, we must ensure that project and project_path are set.
    false
  else
    true "${project:="$USER"}" "${project_path:="$HOME"}"
  fi

  export project environment project_path shared previous_path release_path \
    stage_path log_path

  if __sm.module.is.loaded rvm
  then
    if [[ -n "${release_path}" ]] && ! files are empty "${release_path}/.rvmrc"
    then
      source "${release_path}/.rvmrc"
    fi
  fi

  # If the project_path variable is nonempty
  if [[ -n "${project_path}" ]]
  then
    # then ensure that the shared_path, release_path, environment and vcs
    # varaibles are set.
    : \
      "${shared_path:=${project_path}/shared}" \
      "${release_path:=${project_path}/active/${project}}" \
      "${environment:="production"}"

    # Set the project log path into the shared path's log directory
    project_log_path="$shared_path/log"

    # Set the extension_log_path to the project_log_path direcotory
    extension_log_path="${project_log_path}"
  fi

  # If the project variable is nonempty
  if [[ -n "${project}" ]]
  then
    # then ensure the database_name is set
    true "${database_name:="${project}_${environment}"}"

    # And source the project name rc file, if they exist
    if files exist ".${project}rc"
    then
      files source ".${project}rc"
    fi
  fi
}

