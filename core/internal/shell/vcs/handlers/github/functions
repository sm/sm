#!/bin/sh

internal_vcs_handlers_github_initialize()
{
  typeset -fa github_resolution_order
  [[ -n "${github_resolution_order[*]}" ]] || github_resolution_order=( tgz zip git )
}

# ## github\_get()
#
#
#
# Code Walkthrough
github_get()
{
  typeset -f fetch_error_handler
  typeset _uri _target branch save_fetch_error_handler
  _uri="${1:-}"
  _target="${2:-}"
  branch=${3:-${branch:-master}}

  (( $# )) && shift || __sm.log.fail "uri must be specified as the first parameter."
  (( $# )) && shift || __sm.log.fail "target path must be specified as the second parameter."

  save_fetch_error_handler="${fetch_error_handler}"
  fetch_error_handler=true

  for _method in ${github_resolution_order[@]}
  do
    case "${_method}" in
      (tgz)
        __sm.log.debug vcs "github -> https://github.com/${_uri}/tarball/${branch}"
        archive_get "https://github.com/${_uri}/tarball/${branch}" "${_target}" "$@"
        ;;
      (zip)
        __sm.log.debug vcs "github -> https://github.com/${_uri}/zipball/${branch}"
        archive_get "https://github.com/${_uri}/zipball/${branch}" "${_target}" "$@"
        ;;
      (git)
        __sm.log.debug vcs "github -> git://github.com/${_uri}.git"
        git_get "git://github.com/${_uri}.git" "${_target}" "$@"
        ;;
      (*)
        __sm.log.fail "Unknonw github_resolution_order method: '${_method}'."
    esac

    if [[ -z "${__vcs_failed}" ]]
    then
      echo "${_uri}" > "${_target}/.uri"
      return 0
    fi
  done
  fetch_error_handler="${save_fetch_error_handler}"
  fetch_error all_uris_failed
}
