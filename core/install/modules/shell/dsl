#!/usr/bin/env bash

perform()
{
  enter "${initial_pwd}"
  "$*"
}

prepare_for_installation()
{
  local directory _path

  log_step "Ensuring that installation target path exists (${install_path})" \
    ensure_paths_exist "${install_path}"

  enter "${install_path}"

  for directory in "${cleanse_paths[@]}"
  do
    _path="${install_path}/${directory}"
    if path_exists "${_path}"
    then
      log_step "Removing old sm component path (${_path})" rm -rf "${_path}"
    fi
  done

  log_step "Creating install path directories (${directories[*]} ${aux_paths[*]})" \
  ensure_paths_exist "${directories[@]}" "${aux_paths[@]}"
}

install_core()
{
  local _dir

  log_step "Installing core directories (${directories[*]})" \
    copy_paths --force to "${install_path}/" "${directories[@]}"

  log_step "Installing core files (${files[*]})" \
    copy_files to "${install_path}" ${files[@]}

  log_step "Installing core extension set (sets/core)" \
    copy_paths --force to "${install_path}/" "core"
}

install_configuration_files()
{
  log_step "Ensuring configuration files exist (${configs[*]})"
  for config_file in "${configs[@]}"
  do
    ensure_files_exist "${install_path}/config/${config_file}"
  done
  log_step success
}

symlink_sm()
{
  local _bin_path="${install_path//sm/bin}"

  if variable_is_nonempty sm_path && path_exists "${_bin_path}"
  then
    local _binary
    for _binary in "${binaries[@]}"
    do
      log_step "Linking binary (${install_path}/bin/${_binary} => ${_bin_path}/${_binary})" \
        link --force "${install_path}/bin/${_binary}" to "${_bin_path}/${_binary}"
    done
  fi
}

setup_shell_completion()
{
  local _prefix="/etc" _mode _name

  if path_exists "${_prefix}/bash_completion.d"
  then
    completion_prefix="${_prefix}/bash_completion.d"
    _name="sm"
    _mode=0644
  else
    completion_prefix="${_prefix}/profile.d"
    ensure_paths_exist "${_prefix}/profile.d/"
    _name="sm-completion.sh"
    _mode=0755
  fi

  log_step "Setting up sm shell completion (${completion_prefix}/${_name})" \
    copy_file \
      from "${install_path}/core/cli/modules/shell/completion/bash" \
      to "${completion_prefix}/${_name}" \
      mode ${_mode} owner "root"
}

setup_profile_d()
{
  ensure_paths_exist "${profile_d_path}"

  if user_is_root
  then
    if os_is_darwin
    then
      file_contains /etc/profile "${profile_d_path}" ||
        write "\nif test -d '${profile_d_path}' ; then for profile in \"${profile_d_path}\"/*.sh ; do if test -x \"\$profile\" ; then . \"\$profile\" ; fi ; done ; unset profile ; fi" \
          to /etc/profile
    fi
  else
    ensure_files_exist "$HOME/.profile" "$HOME/.bashrc" "$HOME/.bash_profile"

    file_contains "$HOME/.bashrc" "$HOME/.profile" ||
      write "if test -s \"$HOME/.profile\" ; then . \"$HOME/.profile\" ; fi"\
        append to "$HOME/.bashrc"

    file_contains "$HOME/.bash_profile" "$HOME/.bashrc" ||
      write "if test -s \"$HOME/.bashrc\" ; then . \"$HOME/.bashrc\" ; fi"\
        append to "$HOME/.bash_profile"

    file_contains "$HOME/.profile" "${profile_d_path}" ||
      write "\nif test -d '${profile_d_path}' ; then for profile in \"${profile_d_path}\"/*.sh ; do if test -x \"\$profile\" ; then . \"\$profile\" ; fi ; done ; unset profile ; fi" \
        append to "$HOME/.profile"
  fi

  file_exists "${profile_d_path}/sm.sh" &&
     file_contains "${profile_d_path}/sm.sh" "${install_path}/pkg/active/sbin\"" ||
     {
       # To prepend or postpend??? Because of selinux issues prepend for now.
       write "PATH=\"\${PATH}:${install_path}/pkg/active/bin:${install_path}/pkg/active/sbin\"" \
         to "${profile_d_path}/sm.sh"

       chmod_files 0755 "${profile_d_path}/sm.sh"
     }
}

set_sm_path()
{
  replace_content "^sm_path=.*" with "sm_path=\"${install_path}\"" \
    in "${install_path}/bin/sm"

  replace_content "^saved_sm_path=.*" with "saved_sm_path=\"\${sm_path:-${install_path}}\"" \
    in "${install_path}/core/sm/modules/shell/core/initialize"
}

install_sm()
{
  log "BDSM Framework Installation:"

  prepare_for_installation

  perform install_core

  perform set_sm_path

  perform install_configuration_files

  perform setup_profile_d

  user_is_not_root || {
    perform symlink_sm
    perform setup_shell_completion
  }

  local _binary
  for _binary in "${binaries[@]}"
  do
    log_step "Ensuring that binary is executable (${_binary})" \
      chmod_files 0755 "${install_path}/bin/${_binary}"
  done

  succeed "BDSM Framework installed."
}

